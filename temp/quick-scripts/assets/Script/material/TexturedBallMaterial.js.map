{"version":3,"sources":["TexturedBallMaterial.js"],"names":["math","cc","vmath","renderEngine","renderer","gfx","Material","DEG","Math","PI","require","TexturedBallMaterial","texture","rotationMatrix","ratio","call","_ballTexture","_texture","_highlight","_ratio","_rotationMatrix","pass","Pass","setDepth","setCullMode","CULL_NONE","setBlend","BLEND_FUNC_ADD","BLEND_SRC_ALPHA","BLEND_ONE_MINUS_SRC_ALPHA","mainTech","Technique","name","type","PARAM_TEXTURE_2D","PARAM_MAT4","PARAM_FLOAT","_effect","effect","Effect","iTexture","ballTexture","highlight","_mainTech","js","extend","mixin","prototype","getTexture","setTexture","val","update","mipmap","setProperty","getImpl","setBallTexture","setHighlight","setRotationMatrix","setRatio","module","exports"],"mappings":"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","file":"TexturedBallMaterial.js","sourceRoot":"../../../../../assets/Script/material","sourcesContent":["const math = cc.vmath;\nconst renderEngine = cc.renderer.renderEngine;\nconst renderer = renderEngine.renderer;\nconst gfx = renderEngine.gfx;\nconst Material = renderEngine.Material;\n\nconst DEG = Math.PI / 180;\n\n// Require to load the shader to program lib\nrequire('./TexturedBallShader');\n\nfunction TexturedBallMaterial(texture, rotationMatrix, ratio) {\n  Material.call(this, false);\n\n  this._ballTexture = null;\n  this._texture = null;\n  this._highlight = null;\n  this._ratio = ratio;\n  this._rotationMatrix = rotationMatrix;\n\n  var pass = new renderer.Pass('TexturedBall');\n  pass.setDepth(false, false);\n  pass.setCullMode(gfx.CULL_NONE);\n  pass.setBlend(\n    gfx.BLEND_FUNC_ADD,\n    gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA,\n    gfx.BLEND_FUNC_ADD,\n    gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA\n  );\n\n  let mainTech = new renderer.Technique(\n    ['transparent'],\n    [\n      { name: 'iTexture', type: renderer.PARAM_TEXTURE_2D },\n      { name: 'ballTexture', type: renderer.PARAM_TEXTURE_2D },\n      { name: 'highlight', type: renderer.PARAM_TEXTURE_2D },\n      { name: 'rotationMatrix', type: renderer.PARAM_MAT4 },\n      { name: 'ratio', type: renderer.PARAM_FLOAT },\n    ],\n    [ pass ]\n  );\n\n  // need _effect to calculate hash\n  this._effect = this.effect = new renderer.Effect(\n    [ mainTech ],\n    {\n      iTexture: this._texture,\n      ballTexture: this._ballTexture,\n      highlight: this._highlight,\n      rotationMatrix: this._rotationMatrix,\n      ratio: this._ratio,\n    },\n    []\n  );\n\n  this._mainTech = mainTech;\n}\ncc.js.extend(TexturedBallMaterial, Material);\ncc.js.mixin(TexturedBallMaterial.prototype, {\n  getTexture () {\n    return this._texture;\n  },\n\n  setTexture (val) {\n    if (this._texture !== val) {\n      this._texture = val;\n      this._texture.update({ mipmap: true });\n      this.effect.setProperty('iTexture', val.getImpl());\n    }\n  },\n\n  setBallTexture(val) {\n    if (this._ballTexture !== val) {\n      this._ballTexture = val;\n      this._ballTexture.update({ mipmap: true });\n      this.effect.setProperty('ballTexture', val.getImpl());\n    }\n  },\n\n  setHighlight(val) {\n    if (this._highlight !== val) {\n      this._highlight = val;\n      this._highlight.update();\n      this.effect.setProperty('highlight', val.getImpl());\n    }\n  },\n\n  setRotationMatrix(val) {\n    this._rotationMatrix = val;\n    this.effect.setProperty('rotationMatrix', val);\n  },\n\n  setRatio(val) {\n    this._ratio = val;\n    this.effect.setProperty('ratio', val);\n  },\n});\n\nmodule.exports = TexturedBallMaterial;\n"]}